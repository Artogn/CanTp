#include "CanTp_Cfg.h"

{{#configurations}}
{{#channels}}
{{#transmitters}}
{{#source address}}

#ifndef CANTP_N_SA_{{.}}

#define CANTP_N_SA_{{.}}

static const CanTp_NSaType CanTp_NSa{{.}} = {
    {{.}}u
};

#endif /* #ifndef CANTP_N_SA_{{.}} */
{{/source address}}
{{#target address}}

#ifndef CANTP_N_TA_{{.}}

#define CANTP_N_TA_{{.}}

static const CanTp_NTaType CanTp_NTa{{.}} = {
    {{.}}u
};

#endif /* #ifndef CANTP_N_TA_{{.}} */
{{/target address}}
{{#address extension}}

#ifndef CANTP_N_AE_{{.}}

#define CANTP_N_AE_{{.}}

static const CanTp_NAeType CanTp_NAe{{.}} = {
    {{.}}u
};

#endif /* #ifndef CANTP_N_AE_{{.}} */
{{/address extension}}
{{/transmitters}}
{{#receivers}}
{{#source address}}

#ifndef CANTP_N_SA_{{.}}

#define CANTP_N_SA_{{.}}

static const CanTp_NSaType CanTp_NSa{{.}} = {
    {{.}}u
};

#endif /* #ifndef CANTP_N_SA_{{.}} */
{{/source address}}
{{#target address}}

#ifndef CANTP_N_TA_{{.}}

#define CANTP_N_TA_{{.}}

static const CanTp_NTaType CanTp_NTa{{.}} = {
    {{.}}u
};

#endif /* #ifndef CANTP_N_TA_{{.}} */
{{/target address}}
{{#address extension}}

#ifndef CANTP_N_AE_{{.}}

#define CANTP_N_AE_{{.}}

static const CanTp_NAeType CanTp_NAe{{.}} = {
    {{.}}u
};

#endif /* #ifndef CANTP_N_AE_{{.}} */
{{/address extension}}
{{/receivers}}
{{/channels}}
{{/configurations}}

{{#configurations}}
{{#channels}}
{{#channel_has_rx_n_sdu}}
const CanTp_RxNSduType CanTp_RxNSduConfig{{CONFIG_ID}}[] = {
    {{#receivers}}
    {
        {{network service data unit identifier}}u, /* network service data unit identifier. */
        {{#source address}}&CanTp_NSa{{.}}{{/source address}}{{^source address}}NULL_PTR{{/source address}}, /* source address (pNSa). */
        {{#target address}}&CanTp_NTa{{.}}{{/target address}}{{^target address}}NULL_PTR{{/target address}}, /* target address (pNTa). */
        {{#address extension}}&CanTp_NAe{{.}}{{/address extension}}{{^address extension}}NULL_PTR{{/address extension}}, /* address extension (pNAe). */
        {{#block size}}{{.}}u{{/block size}}{{^block size}}CANTP_DEFAULT_BLOCK_SIZE{{/block size}}, /* block size. */
        {{#N_Ar timeout}}{{.}}u, /* A timeout (CanTpNar). */{{/N_Ar timeout}}{{^N_Ar timeout}}1000u, /* defaulted A timeout (CanTpNar). */{{/N_Ar timeout}}
        /* TODO: calculate N_Br according to performance requirement if not defined by user. */
        {{#N_Br timeout}}{{.}}u{{/N_Br timeout}}{{^N_Br timeout}}CANTP_DEFAULT_N_BR_TIMEOUT{{/N_Br timeout}} , /* B timeout. */
        {{#N_Cr timeout}}{{.}}u, /* C timeout (CanTpNcr). */{{/N_Cr timeout}}{{^N_Cr timeout}}1000u, /* defaulted C timeout (CanTpNcr). */{{/N_Cr timeout}}
        {{#wait for transmission maximum}}{{.}}u{{/wait for transmission maximum}}{{^wait for transmission maximum}}CANTP_DEFAULT_WFT_MAX{{/wait for transmission maximum}}, /* wait for transmission maximum. */
        {{#minimum separation time}}{{.}}u{{/minimum separation time}}{{^minimum separation time}}CANTP_DEFAULT_ST_MIN{{/minimum separation time}}, /* minimum separation time. */
        {{addressing format}}, /* addressing format (CanTpTxAddressingFormat). */
        {{#enable padding}}TRUE{{/enable padding}}{{^enable padding}}FALSE{{/enable padding}}, /* padding enabled. */
        {{#communication type}}{{.}}{{/communication type}}{{^communication type}}CANTP_DEFAULT_COMMUNICATION_TYPE{{/communication type}}, /* communication type. */
        {{network service data unit reference}}u /* network service data unit reference. */
    },
    {{/receivers}}
};
{{/channel_has_rx_n_sdu}}

{{#channel_has_tx_n_sdu}}
static const CanTp_TxNSduType CanTp_TxNSduConfig{{CONFIG_ID}}[] = {
    {{#transmitters}}
    {
        {{network service data unit identifier}}u, /* network service data unit identifier (CanTpTxNSduId). */
        {{#source address}}&CanTp_NSa{{.}}{{/source address}}{{^source address}}NULL_PTR{{/source address}}, /* source address (pNSa). */
        {{#target address}}&CanTp_NTa{{.}}{{/target address}}{{^target address}}NULL_PTR{{/target address}}, /* target address (pNTa). */
        {{#address extension}}&CanTp_NAe{{.}}{{/address extension}}{{^address extension}}NULL_PTR{{/address extension}}, /* address extension (pNAe). */
        {{#N_As timeout}}{{.}}u, /* A timeout (CanTpNas). */{{/N_As timeout}}{{^N_As timeout}}1000u, /* defaulted A timeout (CanTpNas). */{{/N_As timeout}}
        {{#N_Bs timeout}}{{.}}u, /* B timeout (CanTpNbs). */{{/N_Bs timeout}}{{^N_Bs timeout}}1000u, /* defaulted B timeout (CanTpNbs). */{{/N_Bs timeout}}
        {{N_Cs timeout}}u, /* C timeout (CanTpNcs). */
        {{#enable transmit cancellation}}TRUE{{/enable transmit cancellation}}{{^enable transmit cancellation}}FALSE{{/enable transmit cancellation}}, /* transmit cancellation enabled (CanTpTc). */
        {{addressing format}}, /* addressing format (CanTpTxAddressingFormat). */
        {{#enable padding}}TRUE{{/enable padding}}{{^enable padding}}FALSE{{/enable padding}}, /* padding enabled (CanTpTxPaddingActivation). */
        {{communication type}}, /* communication type (CanTpTxTaType). */
        {{network service data unit reference}}u /* network service data unit reference (CanTpTxNSduRef). */
    },
    {{/transmitters}}
};
{{/channel_has_tx_n_sdu}}
{{/channels}}

static const CanTp_ChannelType CanTp_ChannelConfig{{CONFIG_ID}}[] = {
    {{#channels}}
    {
        {
            {{#channel_has_rx_n_sdu}}&CanTp_RxNSduConfig{{CONFIG_ID}}[0x00u]{{/channel_has_rx_n_sdu}}{{^channel_has_rx_n_sdu}}NULL_PTR{{/channel_has_rx_n_sdu}},
            {{#channel_has_rx_n_sdu}}sizeof(CanTp_RxNSduConfig{{CONFIG_ID}}) / sizeof(CanTp_RxNSduConfig{{CONFIG_ID}}[0x00u]){{/channel_has_rx_n_sdu}}{{^channel_has_rx_n_sdu}}0x00u{{/channel_has_rx_n_sdu}},
            {{#channel_has_tx_n_sdu}}&CanTp_TxNSduConfig{{CONFIG_ID}}[0x00u]{{/channel_has_tx_n_sdu}}{{^channel_has_tx_n_sdu}}NULL_PTR{{/channel_has_tx_n_sdu}},
            {{#channel_has_tx_n_sdu}}sizeof(CanTp_TxNSduConfig{{CONFIG_ID}}) / sizeof(CanTp_TxNSduConfig{{CONFIG_ID}}[0x00u]){{/channel_has_tx_n_sdu}}{{^channel_has_tx_n_sdu}}0x00u{{/channel_has_tx_n_sdu}},
        },
        {{channel mode}}
    },
    {{/channels}}
};
{{/configurations}}

const CanTp_ConfigType CanTp_Config[{{num_of_config}}u] = {
    {{#configurations}}
    {
        {{#main function period}}{{.}}u /* main function period. */{{/main function period}}{{^main function period}}0x01u /* defaulted main function period. */{{/main function period}},
        sizeof(CanTp_ChannelConfig{{CONFIG_ID}}) / sizeof(CanTp_ChannelConfig{{CONFIG_ID}}[0x00u]),
        &CanTp_ChannelConfig{{CONFIG_ID}}[0x00u],
        {{#padding byte}}{{.}}u /* padding byte value (CanTpPaddingByte). */{{/padding byte}}{{^padding byte}}0xFFu /* defaulted padding byte value (CanTpPaddingByte). */{{/padding byte}}
    },
    {{/configurations}}
};
